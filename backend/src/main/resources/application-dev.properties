## Nome da aplicação
spring.application.name=TechCommerce

## Configuração do Banco de Dados
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.url=${SPRING_DATASOURCE_URL}

# Permite que o Spring realize alguns INSERTS iniciais
spring.sql.init.mode=always

# Configuração do DevTools
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# Só inicia a API após o banco de dados estar pronto
spring.jpa.defer-datasource-initialization=true

# O Spring atualizará/criará automaticamente as tabelas conforme as entidades forem atualizadas/criadas
spring.jpa.hibernate.ddl-auto=update

# Apontamos para o JPA e Hibernate qual é o Dialeto do banco de dados
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Comandos SQL executados pelo Hibernate serão mostrados no console
spring.jpa.show-sql=false

# Formata o SQL para melhor visualização
spring.jpa.properties.hibernate.format_sql=true

# Adiciona comentários ao SQL
spring.jpa.properties.hibernate.use_sql_comments=true

## Terminal Spring em cores
spring.output.ansi.enabled=always

# Configuração do servidor
server.error.include-exception=true

# Configuração do Swagger
springdoc.api-docs.path=/v1/api-docs

# Configuração do Log
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG